### Questions Avancées MongoDB

1 - Écrivez une requête d'agrégation pour trouver les 5 utilisateurs ayant le plus grand nombre de publications ainsi que le nombre total de commentaires sur ces publications. Retournez le nom d'utilisateur (`username`), le nombre de publications et le nombre total de commentaires.

2 - À l'aide de la phase `$lookup`, créez une requête qui récupère les publications avec leurs commentaires, mais inclut uniquement les commentaires postés au cours des 30 derniers jours. Retournez le contenu de la publication et le contenu des commentaires.

3 - Écrivez une requête d'agrégation pour transformer la collection `Posts` en ajoutant un champ supplémentaire `likeStatus`, qui indique si l'utilisateur connecté (donné en entrée) a aimé la publication (true/false).

4 - Créez une réponse paginée pour récupérer les publications avec leurs commentaires. La pagination est basée sur le nombre de publications par page (par exemple, 10 publications par page). Incluez des paramètres pour `pageNumber` (numéro de la page) et `pageSize` (taille de la page).

5 - Implémentez une recherche textuelle complète sur la collection `Posts` et retournez les publications correspondant à un terme de recherche spécifique, triées par pertinence (score). Incluez le score dans le résultat.

6 - Supposons que vous avez des doublons dans votre collection `Posts` basés sur le contenu. Écrivez une requête d'agrégation pour identifier les publications en double (même contenu) et retournez les ID des doublons pour une éventuelle suppression.

7 - Écrivez une requête pour mettre à jour le tableau `likes` dans la collection `Posts`. Si un utilisateur aime une publication, ajoutez son ID au tableau ; s'il retire son "like", supprimez son ID du tableau. Assurez-vous de gérer les cas où l'utilisateur pourrait déjà exister dans le tableau `likes`.

### Comment Aborder Ces Questions  
- Décomposez chaque question en tâches plus petites pour simplifier leur résolution.  
- Testez vos requêtes dans le shell MongoDB ou dans votre client MongoDB préféré.  
- Prenez en compte les implications sur les performances, comme l'utilisation des index là où c'est pertinent.  
- Consultez la documentation MongoDB pour vous référer aux opérateurs et aux étapes spécifiques.